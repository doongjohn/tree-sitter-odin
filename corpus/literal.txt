================================================================================
struct
================================================================================

A : typeid : struct {
  a: f32,
  b: int,
}

B :: struct {
  a: f32
}

C :: struct {
  a, b, c: f32
}

--------------------------------------------------------------------------------

(source_file
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (type_identifier)
    (operator)
    (expression_list
      (type_value_struct
        (keyword)
        (type_value_struct_field
          (identifier_list
            (identifier))
          (operator)
          (type_identifier))
        (type_value_struct_field
          (identifier_list
            (identifier))
          (operator)
          (type_identifier)))))
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (type_value_struct
        (keyword)
        (type_value_struct_field
          (identifier_list
            (identifier))
          (operator)
          (type_identifier)))))
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (type_value_struct
        (keyword)
        (type_value_struct_field
          (identifier_list
            (identifier)
            (identifier)
            (identifier))
          (operator)
          (type_identifier))))))

================================================================================
union
================================================================================

A :: union {
  f32,
  int,
}

B :: union #no_nil {
  f32
}

--------------------------------------------------------------------------------

(source_file
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (type_value_union
        (keyword)
        (type_value_union_field
          (type_identifier))
        (type_value_union_field
          (type_identifier)))))
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (type_value_union
        (keyword)
        (type_value_tag
          (identifier))
        (type_value_union_field
          (type_identifier))))))

================================================================================
enum
================================================================================

Direction :: enum{North, East, South, West}

Foo :: enum u32 {
	A,
	B = 4,
	C = 7,
	D = 1337,
}

--------------------------------------------------------------------------------

(source_file
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (type_value_enum
        (keyword)
        (type_value_enum_field
          (enum_field))
        (type_value_enum_field
          (enum_field))
        (type_value_enum_field
          (enum_field))
        (type_value_enum_field
          (enum_field)))))
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (type_value_enum
        (keyword)
        (type_identifier)
        (type_value_enum_field
          (enum_field))
        (type_value_enum_field
          (enum_field)
          (operator)
          (int_literal))
        (type_value_enum_field
          (enum_field)
          (operator)
          (int_literal))
        (type_value_enum_field
          (enum_field)
          (operator)
          (int_literal))))))
