========
builtin proc
========

a := a.swizzle(1, another_proc())
b := swizzle(a, 2, 1, 0)

---

(source_file
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (call_expression
        (selector_expression
          (identifier)
          (identifier))
        (arguments
          (argument
            (int_literal))
          (argument
            (call_expression
              (identifier)
              (arguments)))))))
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (call_expression
        (builtin_procedure)
        (arguments
          (argument
            (identifier))
          (argument
            (int_literal))
          (argument
            (int_literal))
          (argument
            (int_literal))))))
)

========
proc
========

a := some_proc()
a := some_proc(1, another_proc())

---

(source_file
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (call_expression
        (identifier)
        (arguments))))
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (call_expression
        (identifier)
        (arguments
          (argument
            (int_literal))
          (argument
            (call_expression
              (identifier)
              (arguments)))))))
)

========
member proc
========

a := a.some_proc()
a := a.b.some_proc()
a := a.b.c.some_proc(1, another_proc())

---

(source_file
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (call_expression
        (selector_expression
          (identifier)
          (identifier))
        (arguments))))
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (call_expression
        (selector_expression
          (selector_expression
            (identifier)
            (identifier))
          (identifier))
        (arguments))))
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (call_expression
        (selector_expression
          (selector_expression
            (selector_expression
              (identifier)
              (identifier))
            (identifier))
          (identifier))
        (arguments
          (argument
            (int_literal))
          (argument
            (call_expression
              (identifier)
              (arguments)))))))
)

========
named arguments
========

a := a.some_proc(10, wow = "hi")

---

(source_file
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (call_expression
        (selector_expression
          (identifier)
          (identifier))
        (arguments
          (argument
            (int_literal))
          (named_argument
            (identifier)
            (operator)
            (interpreted_string_literal))))))
)

========
proc type
========

p :: proc(using a: f32)

---

(source_file
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (type_proc
        (keyword)
        (parameters
          (parameter
            (keyword)
            (identifier)
            (operator)
            (type_identifier))))))
)

========
proc body
========

p :: proc(a: f32) {

}

---

(source_file
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_list
      (proc_body
        (keyword)
        (parameters
          (parameter
            (identifier)
            (operator)
            (type_identifier)))
        (block_statement))))
)

========
proc body with unnamed parameter
========

p :: proc(f32) {

}

---
