================================================================================
builtin proc
================================================================================

a :: proc() {
  a: type_of(10)
  n := len(array)
  #assert("" == "")
  #panic("lol")
}

--------------------------------------------------------------------------------

(source_file
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (proc_literal
        (keyword)
        (parameters)
        (block_statement
          (var_declaration
            (identifier_list
              (identifier))
            (operator)
            (type_of_expression
              (builtin_identifier)
              (int_literal)))
          (var_declaration
            (identifier_list
              (identifier))
            (operator)
            (operator)
            (expression_type_list
              (call_expression
                (builtin_procedure)
                (arguments
                  (argument
                    (identifier))))))
          (call_statement
            (builtin_procedure)
            (arguments
              (argument
                (binary_expression
                  (interpreted_string_literal)
                  (operator)
                  (interpreted_string_literal)))))
          (call_statement
            (builtin_procedure)
            (arguments
              (argument
                (interpreted_string_literal)))))))))


================================================================================
proc
================================================================================

a := some_proc()
a := some_proc(1, another_proc())

--------------------------------------------------------------------------------

(source_file
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (call_expression
        (identifier)
        (arguments))))
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (call_expression
        (identifier)
        (arguments
          (argument
            (int_literal))
          (argument
            (call_expression
              (identifier)
              (arguments))))))))

================================================================================
member proc
================================================================================

a := a.some_proc()
a := a.b.some_proc()
a := a.b.c.some_proc(1, another_proc())

--------------------------------------------------------------------------------

(source_file
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (call_expression
        (selector_expression
          (identifier)
          (identifier))
        (arguments))))
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (call_expression
        (selector_expression
          (selector_expression
            (identifier)
            (identifier))
          (identifier))
        (arguments))))
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (call_expression
        (selector_expression
          (selector_expression
            (selector_expression
              (identifier)
              (identifier))
            (identifier))
          (identifier))
        (arguments
          (argument
            (int_literal))
          (argument
            (call_expression
              (identifier)
              (arguments))))))))

================================================================================
named arguments
================================================================================

a := a.some_proc(10, wow = "hi")

--------------------------------------------------------------------------------

(source_file
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (call_expression
        (selector_expression
          (identifier)
          (identifier))
        (arguments
          (argument
            (int_literal))
          (named_argument
            (identifier)
            (operator)
            (interpreted_string_literal)))))))

================================================================================
proc type
================================================================================

p :: proc(using a: f32)
p :: proc(a: cstring) -> int

--------------------------------------------------------------------------------

(source_file
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (type_proc
        (keyword)
        (parameters
          (parameter_declaration
            (keyword)
            (identifier)
            (operator)
            (type_identifier))))))
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (type_proc
        (keyword)
        (parameters
          (parameter_declaration
            (identifier)
            (operator)
            (type_identifier)))
        (operator)
        (proc_result
          (type_identifier))))))

================================================================================
proc body
================================================================================

p :: proc(a: f32) {}

--------------------------------------------------------------------------------

(source_file
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (proc_literal
        (keyword)
        (parameters
          (parameter_declaration
            (identifier)
            (operator)
            (type_identifier)))
        (block_statement)))))

================================================================================
proc body with unnamed parameter
================================================================================

p :: proc(f32) {}

--------------------------------------------------------------------------------

(source_file
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (proc_literal
        (keyword)
        (parameters
          (parameter_declaration
            (type_identifier)))
        (block_statement)))))

================================================================================
proc body with generic parameter
================================================================================

p :: proc($a: T) {}
p :: proc() ---

--------------------------------------------------------------------------------

(source_file
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (proc_literal
        (keyword)
        (parameters
          (parameter_declaration
            (operator)
            (identifier)
            (operator)
            (type_identifier)))
        (block_statement))))
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (proc_literal
        (keyword)
        (parameters)
        (undefined_value)))))

================================================================================
where clause
================================================================================

simple_sanity_check :: proc(x: [2]int)
	where
    len(x) > 1,
    type_of(x) == [2]int {
	fmt.println(x)
}

--------------------------------------------------------------------------------

(source_file
  (const_declaration
    (identifier_list
      (identifier))
    (operator)
    (operator)
    (expression_type_list
      (proc_literal
        (keyword)
        (parameters
          (parameter_declaration
            (identifier)
            (operator)
            (type_fixed_array
              (int_literal)
              (type_identifier))))
        (keyword)
        (expression_list
          (binary_expression
            (call_expression
              (builtin_procedure)
              (arguments
                (argument
                  (identifier))))
            (operator)
            (int_literal))
          (binary_expression
            (type_of_expression
              (builtin_identifier)
              (identifier))
            (operator)
            (type_fixed_array
              (int_literal)
              (type_identifier))))
        (block_statement
          (call_statement
            (selector_expression
              (identifier)
              (identifier))
            (arguments
              (argument
                (identifier)))))))))
