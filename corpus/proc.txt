========
builtin proc
========

b := swizzle(a, 2, 1, 0)

---

(source_file
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (expression_list
      (call_expression
        (keyword)
        (arguments
          (identifier)
          (int_literal)
          (int_literal)
          (int_literal)))))
)

========
proc
========

a := some_proc()
a := some_proc(1, another_proc())

---

(source_file
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (expression_list
      (call_expression
        (identifier)
        (arguments))))
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (expression_list
      (call_expression
        (identifier)
        (arguments
          (int_literal)
          (call_expression
            (identifier)
            (arguments))))))
)

========
member proc
========

a := a.some_proc()
a := a.b.some_proc()
a := a.b.c.some_proc(1, another_proc())

a := a.swizzle(1, another_proc())

---

(source_file
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (expression_list
      (call_expression
        (selector_expression
          (identifier)
          (identifier))
        (arguments))))
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (expression_list
      (call_expression
        (selector_expression
          (selector_expression
            (identifier)
            (identifier))
          (identifier))
        (arguments))))
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (expression_list
      (call_expression
        (selector_expression
          (selector_expression
            (selector_expression
              (identifier)
              (identifier))
            (identifier))
          (identifier))
        (arguments
          (int_literal)
          (call_expression
            (identifier)
            (arguments))))))
  (var_declaration
    (identifier_list
      (identifier))
    (operator)
    (expression_list
      (call_expression
        (selector_expression
          (identifier)
          (identifier))
        (arguments
          (int_literal)
          (call_expression
            (identifier)
            (arguments))))))
)
